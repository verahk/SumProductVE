// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rarray
NumericVector rarray(NumericVector values, NumericVector dim, List dimnames, CharacterVector scope);
RcppExport SEXP _SumProductVE_rarray(SEXP valuesSEXP, SEXP dimSEXP, SEXP dimnamesSEXP, SEXP scopeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< List >::type dimnames(dimnamesSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type scope(scopeSEXP);
    rcpp_result_gen = Rcpp::wrap(rarray(values, dim, dimnames, scope));
    return rcpp_result_gen;
END_RCPP
}
// factor_product
NumericVector factor_product(List factors);
RcppExport SEXP _SumProductVE_factor_product(SEXP factorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type factors(factorsSEXP);
    rcpp_result_gen = Rcpp::wrap(factor_product(factors));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SumProductVE_rarray", (DL_FUNC) &_SumProductVE_rarray, 4},
    {"_SumProductVE_factor_product", (DL_FUNC) &_SumProductVE_factor_product, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SumProductVE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
